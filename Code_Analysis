import pandas as pd
import matplotlib.pylot as   mp

df=pd.read_csv('ipl_24_del.csv')
bf=pd.read_csv('ipl_24_mat.csv')

# 1) Getting total number of matches played in IPL 
match_played = df['match_id'].nunique()
print(match_played)

# 2)  Getting total balls bowled in ipl valid or non valid 
total_bowls_bowled=len(df)
print(total_bowls_bowled)


# 3) count venue where team chose to bast first
bat_first = bf[bf['toss_decision'] == 'bat']['venue'].value_counts().head(10)
print("Venues where teams chose to bat first:\n", bat_first)

# 4) Count venues where teams chose to field first
field_first = bf[bf['toss_decision'] == 'field']['venue'].value_counts().head(10)

print("Venues where teams chose to field first:\n", field_first)


#5) on which venue most 200+ runs are scored 

two_hundred_plus = bf[bf['target_runs'] >=200]['venue'].value_counts().head(10)
print('Most two hundred runs scored on top 10 venues are:\n ',two_hundred_plus)

# 6) which team won the most toss 
toss_win=bf['toss_winner'].value_counts().head(10)
toss_win

# 7) which top 10 venues most matches played 
match_count=bf['venue'].value_counts().head(10)
match_count

# 8) which top 10 batsman gets most man of the match awards 

man_match=bf['player_of_match'].value_counts().head(10)
man_match

#  9) which top 10 batter hits most sixes in ipl 
sixes=df[df['batsman_runs']==6]
player_six=sixes['batter'].value_counts().head(10)
player_six


# 10) top 5 batsman to score most runs of ipl 
player_runs=df.groupby('batter')['batsman_runs'].sum()
top_5=player_runs.sort_values(ascending=False).head(5)
top_5

# 11)  Top 10  batters who plays most dot balls in ipl 
dot_balls =df[df['batsman_runs']==0]
dot_plays=dot_balls['batter'].value_counts().head(10)
dot_plays

# 12) Top 10  batters who takes  most single runs in ipl 
single_balls =df[df['batsman_runs']==1]
single_plays=single_balls['batter'].value_counts().head(10)
single_plays

# 13) Top 10  batters who takes  most double runs in ipl 
double_runs =df[df['batsman_runs']==2]
double_plays=double_runs['batter'].value_counts().head(10)
double_plays

# 14) Top 10  batters who takes  three runs in ipl 
three_runs =df[df['batsman_runs']==3]
three_plays=three_runs['batter'].value_counts().head(10)
three_plays

# 15) Top 10  batters who hits most fours  in ipl 
fours =df[df['batsman_runs']==4]
fours_plays=fours['batter'].value_counts().head(10)
fours_plays



# 16 ) using matplotlib for displaying graphical forms 
# plot the graphs of count which top 10 team wons the most matches 
plt.figure(figsize=(10,6))
match_winner=bf['winner'].value_counts().head(10)
ax=match_winner.plot(kind='bar',title='Number of matches won by the teams',xlabel='Teams',ylabel='Number of win',color='skyblue')

for p in ax.patches:
    ax.annotate(str(p.get_height()), (p.get_x() + p.get_width() / 2., p.get_height()), ha='center', va='center', xytext=(0, 10), textcoords='offset points')

plt.show()


# 17) how many times super over occurred in ipl  season wise 

sup_over=bf[bf['super_over']=='Y'].groupby('season').size()
sup_over


# 18) season wise winner from ipl 

winner_final=bf[bf['match_type']=='Final'].groupby('season')['winner'].first()
winner_final



# 19) how many times each team play super over occurred in ipl

# Filter rows where super over occurred
super_over_matches = bf[bf['super_over'] == 'Y']

# Count occurrences for team1
team1_super_over = super_over_matches['team1'].value_counts()

# Count occurrences for team2
team2_super_over = super_over_matches['team2'].value_counts()

# Combine the counts
total_super_over = team1_super_over.add(team2_super_over, fill_value=0)

total_super_over


#20) season wise most player of the match award 


season_motm = bf['player_of_match'].groupby(bf['season']).value_counts().groupby(level=0).idxmax()
season_motm



# 21) most dismisaal type in ipl

count_dismissal=df['dismissal_kind'].value_counts()
count_dismissal.plot(kind='bar',xlabel='Dismissal Type',ylabel='Count')


#22) which player get the most run out 
run_out=df[df['dismissal_kind']=='run out'].groupby('player_dismissed').size().sort_values(ascending=False)
run_out

#23) most catch taken by players in ipl
catch_taken=df[df['dismissal_kind']=='caught'].groupby('fielder').size().sort_values(ascending=False)
catch_taken


#24) most run out done by player 
fielder_runout=df[df['dismissal_kind']=='run out'].groupby('fielder').size().sort_values(ascending=False).head(10)
fielder_runout.plot(kind='bar',xlabel='Fielder',ylabel='Frequency')



